@page
@model Individual_Sem2_Web.Pages.SignUpModel
@{
    ViewData["Title"] = "Create an account ";
    Layout = "_LayoutMain";
}
<form method="post" >
<div class="container-fluid py-5 ">
    <div class="row justify-content-center">
            
        <div class="col-lg-8 bg-dark " style="border-radius: 1rem;">
            <h2 class="mb-4">Register</h2>
                @if (!string.IsNullOrEmpty(TempData["WarningMessage"] as string))
                {
                    <div class="alert alert-warning" role="alert">
                        @TempData["WarningMessage"]
                    </div>
                    TempData.Remove("WarningMessage");
                }
            <div class="row">

                <div class="col-md-6 ">
                    <div class="mb-3 ">
                        <label asp-for="guestToRegister.FirstName" class="form-label text-white-50">First Name</label>
                        <input asp-for="guestToRegister.FirstName" type="text" class="form-control" required>
                        <span asp-validation-for="guestToRegister.FirstName" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="guestToRegister.LastName" class="form-label text-white-50">Last Name</label>
                        <input asp-for="guestToRegister.LastName" type="text" class="form-control" required>
                        <span asp-validation-for="guestToRegister.LastName" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="guestToRegister.Email" class="form-label text-white-50">Email</label>
                        <input asp-for="guestToRegister.Email" type="email" class="form-control" required>
                        <span asp-validation-for="guestToRegister.Email" class="text-danger"></span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="mb-3">
                        <label asp-for="guestToRegister.Password" class="form-label text-white-50">Password</label>
                        <input asp-for="guestToRegister.Password" type="password" class="form-control" id="password" required>
                        <span asp-validation-for="guestToRegister.Password" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label for="ConfirmPassword" class="form-label text-white-50">Confirm Password</label>
                        <input type="password" class="form-control" id="confirmPassword" name="confirmPassword" required>
                        <span id="passwordMatchError" class="text-danger"></span>
                        <span id="passwordStrengthError" class="text-danger"></span>
                    </div>
                    <div class="mb-3">
                        <label asp-for="guestToRegister.Birthdate" class="form-label text-white-50">Date of Birth</label>
                        <input asp-for="guestToRegister.Birthdate" type="date" class="form-control" required>
                        <span asp-validation-for="guestToRegister.Birthdate" class="text-danger"></span>
                    </div>
                </div>
                
            </div>
            <div class="mb-3">
                <label asp-for="guestToRegister.ProfilePictureURL" class="form-label text-white-50">Profile Picture URL</label>
                <input asp-for="guestToRegister.ProfilePictureURL" type="text" class="form-control" >
                <span asp-validation-for="guestToRegister.ProfilePictureURL" class="text-danger"></span>
            </div>
            <div class="d-grid gap-2">
                <button type="submit" class="btn btn-primary btn-lg mb-5">Register</button>
            </div>
        </div>
    </div>
</div>
</form>

<script>
    const passwordInput = document.getElementById('password');
    const confirmPasswordInput = document.getElementById('confirmPassword');
    const passwordMatchError = document.getElementById('passwordMatchError');
    const passwordStrengthError = document.getElementById('passwordStrengthError');

    function validatePassword() {
        //Check if passwords match
        if (passwordInput.value !== confirmPasswordInput.value) {
            passwordMatchError.textContent = 'Passwords do not match';
        } else {
            passwordMatchError.textContent = '';
        }

        //Check if password is too weak
        const passwordStrength = calculatePasswordStrength(passwordInput.value);
        if (passwordStrength === 'weak') {
            passwordInput.setCustomValidity('Password is too weak');
            passwordStrengthError.textContent = 'Password is too weak';
        } else {
            passwordInput.setCustomValidity('');
            passwordStrengthError.textContent = '';
        }
    }

    function calculatePasswordStrength(password) {
        //criteria for strong password
        const minLength = 8;
        const minLowerCase = 1;
        const minUpperCase = 1;
        const minNumbers = 1;

        //cross reference
        if (password.length < minLength ||
            !password.match(/[a-z]/g) || password.match(/[a-z]/g).length < minLowerCase ||
            !password.match(/[A-Z]/g) || password.match(/[A-Z]/g).length < minUpperCase ||
            !password.match(/[0-9]/g) || password.match(/[0-9]/g).length < minNumbers) {
            return 'weak';
        } else {
            return 'strong';
        }
    }

    //event listeners to validate password on input and on form submit
    passwordInput.addEventListener('input', validatePassword);
    confirmPasswordInput.addEventListener('input', validatePassword);
    document.forms[0].addEventListener('submit', validatePassword);
</script>